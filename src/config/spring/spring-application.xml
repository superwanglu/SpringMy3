<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!--  定时器开关  开始-->  
    <task:annotation-driven/>  
    <!--  定时器开关  结束-->   
    	<!-- 标注类型 的事务配置 -->
	<tx:annotation-driven/>
	<!-- 读取资源文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/jdbc.properties" />		
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${driverClassName}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
		<property name="username">
			<value>${username}</value>
		</property>
		<property name="url">
			<value>${url}</value>
		</property>
	</bean>
	<bean id="pagePlugin" class="com.myStyle.pulgin.mybatis.plugin.PagePlugin">
		<property name="properties">
			<props>
				<prop key="dialect">com.myStyle.pulgin.jdbc.dialet.H2Dialect</prop>
				<prop key="pageSqlId">.*query.*</prop>
			</props>
		</property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis/mybatis.xml" />
		<property name="plugins">
			<array>
				<ref bean="pagePlugin" />
			</array>
		</property>
		<property name="mapperLocations">
			<list>
			<!-- 自动匹配Mapper映射文件  -->
				<value>classpath:com/myStyle/entity/*-mapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:config>
<aop:pointcut expression="execution(public * com.myStyle.service.impl.*Impl.*(..))" id="pointcut"/>
<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

<aop:aspectj-autoproxy proxy-target-class="true"/>  

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.myStyle.dao"/>
	<context:component-scan base-package="com.myStyle.service"/>
	<context:component-scan base-package="com.myStyle.log"/>
	<context:component-scan base-package="com.myStyle.security"/>
	<!-- 隐式地向 Spring 容器注册  -->
	<context:annotation-config/>
	
	
       	 <!--  <bean id="quartzJob" class="com.myStyle.controller.LogController"></bean> -->                
         <!-- 可继续加新的任务   --> 
         <!-- 要调用的工作类结束 --> 

         <!-- 定义调用对象和调用对象的方法 --> 
        <!-- <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
             调用的类
             <property name="targetObject"> 
                  <ref bean="quartzJob"/> 
             </property>   
             调用类中的方法
             <property name="targetMethod"> 
                 <value>delete</value> 
             </property> 
         </bean>  -->
 
        <!-- <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
             <property name="jobDetail"> 
                 <ref bean="jobtask"/> 
             </property>
             cron表达式 此处定义为一直触发执行任务 
            <property name="cronExpression"> 
                 <value>0 0 2 * * ?</value> 
                 <value>* */1 * * * ?</value> 
             </property> 
         </bean>  -->
             
         <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序   --> 
         <!-- <bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
             <property name="triggers"> 
                 <list> 
                     <ref bean="doTime"/> 			
                 </list> 
             </property> 
         </bean>  -->
       <!-- 总管理类结束   -->       
</beans>